.noliststyle {
	list-style: none;
}
.g-uppercase {
	text-transform: uppercase;
}
.g-notexttransform {
	text-transform: none;
}
.g-positive-margin-top {
	margin-top: 23rem;
}
.g-negative-margin-bottom {
	margin-bottom: -25rem;
}

// no(margin/padding)(left/right/top/bottom)
// (margin/padding)(2x/3x)
$css_properties: "margin", "padding";
$css_directions: "left", "right", "top", "bottom", "all";
$css_multipliers: 2, 3;
$css_size: "small", "med", "large";
@each $prop in $css_properties {
    @each $dir in $css_directions {
        .no#{$prop}#{$dir} {
            &, > .g-content {
                @if ($dir != "all") {
                    #{$prop}-#{$dir}: 0;
                } @else {
                    #{$prop}: 0;
                }
            }
        }

        @each $size in $css_size {
            .#{$size}#{$prop}#{$dir} {
                &, > .g-content {   
                    @if ($size == "small") {
                        @if ($dir != "all") {
                            #{$prop}-#{$dir}: 0.25rem;
                        } @else {
                            #{$prop}: 0.25rem;
                        }
                    } @else if ($size == "med") {
                        @if ($dir != "all") {
                            #{$prop}-#{$dir}: 1rem;
                        } @else {
                            #{$prop}: 1rem;
                        }
                    } @else if ($size == "large") {
                        @if ($dir != "all") {
                            #{$prop}-#{$dir}: 3rem;
                        } @else {
                            #{$prop}: 3rem;
                        }
                    }
                }    
            }
        }
    }

    @each $multi in $css_multipliers {
        .#{$prop}#{$multi}x {
            > .g-content {
                @if ($prop == "padding") {
                    #{$prop}: $content-padding * $multi;
                } @else if ($prop == "margin") {
                    #{$prop}: $content-margin * $multi;
                }
            }
        }
    }
}

// Section Horizontal Paddings
.section-horizontal-paddings {
    padding-left: 10%;
    padding-right: 10%;

    @include breakpoint(tablet-range) {
        padding-left: 0;
        padding-right: 0;
    }

    @include breakpoint(mobile-only) {
        padding-left: 0;
        padding-right: 0;
    }
}

// Section Horizontal Paddings Small
.section-horizontal-paddings-small {
    padding-left: 5%;
    padding-right: 5%;

    @include breakpoint(tablet-range) {
        padding-left: 0;
        padding-right: 0;
    }

    @include breakpoint(mobile-only) {
        padding-left: 0;
        padding-right: 0;
    }
}

// Section Horizontal Paddings Large
.section-horizontal-paddings-large {
    padding-left: 15%;
    padding-right: 15%;

    @include breakpoint(tablet-range) {
        padding-left: 0;
        padding-right: 0;
    }

    @include breakpoint(mobile-only) {
        padding-left: 0;
        padding-right: 0;
    }
}

// Section Vertical Paddings
.section-vertical-paddings {
    padding-top: 4vw;
    padding-bottom: 4vw;
}

// Section Vertical Paddings Small
.section-vertical-paddings-small {
    padding-top: 2vw;
    padding-bottom: 2vw;
}

// Section Vertical Paddings Large
.section-vertical-paddings-large {
    padding-top: 6vw;
    padding-bottom: 6vw;
}

.g-textpromo-typed {
	visibility: hidden;
}

.typed-cursor{
	display: inline-block;
    opacity: 1;
    font-size: $core-font-size + 0.5;
    @include animation(blink 0.7s infinite);
}
	
@include keyframes(blink) {
    0% { opacity:1; }
    50% { opacity:0; }
    100% { opacity:1; }
}